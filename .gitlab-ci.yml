services:
  - docker:dind

variables:
  RELEASE_DIR: ${CI_PROJECT_DIR}
  HEADS_BRANCH_NAME: universal_devices
  COREBOOT_BRANCH_NAME: universal_devices

stages:
  - build_rom
  - test_rom
  - publish_rom

build_heads:
  image: 3mdeb/heads-docker
  stage: build_rom
  tags:
    - docker
  script:
    - git clone "https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/3mdeb/universal-devices/heads.git" -b ${HEADS_BRANCH_NAME} /home/heads/heads
    - echo $PWD
    - cd /home/heads/heads
    #- make BOARD=apu2
    - mkdir -v ${CI_PROJECT_DIR}/share
    - touch ${CI_PROJECT_DIR}/share/initrd.txt
    #- touch /home/heads/heads/share/bzImage.txt
    #- cp -v /home/heads/heads/build/apu2/initrd.cpio.xz /home/heads/heads/share/initrd.cpio.xz
    #- cp -v /home/heads/heads/build/apu2/bzImage /home/heads/heads/share/bzImage
    - ls -al ${CI_PROJECT_DIR}/share/
    #- ls -al /builds/$CI_PROJECT_DIR/home/heads/heads/share/
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/share/initrd.txt

  #artifacts:
  #  name: BZIMAGE
  #  paths:
  #    - /home/heads/heads/share/bzImage.txt

build_coreboot_rom:
  image: coreboot/coreboot-sdk:1.52
  stage: build_rom
  tags:
    - docker
  script:
    - git clone "https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/3mdeb/universal-devices/coreboot.git" -b ${COREBOOT_BRANCH_NAME} /home/coreboot
    - cp initrd.txt /home/coreboot/initrd.cpio.xz
    #- cp /home/heads/heads/share/bzImage.txt /home/coreboot/bzImage
    - cd /home/coreboot
    - ls -al /home/coreboot/initrd.txt
    #- ls -al /home/coreboot/bzImage.txt
    - cp configs/config.pcengines_apu2_vboot .config
    - make olddefconfig && make
    - cp -v /home/coreboot/build/coreboot.rom ${RELEASE_DIR}/apu2_vboot_${CI_COMMIT_REF_NAME}.rom
    - ls -al ${RELEASE_DIR}
  artifacts:
    name: ${IMAGE}
    paths:
      - ${RELEASE_DIR}/apu2_vboot_${CI_COMMIT_REF_NAME}.rom
  only:
    - tags
    - web

test_rom:
  stage: test_rom
  tags:
    - docker
  script:
    - echo "test_rom"
    - ls -la ${RELEASE_DIR}/$apu2_vboot_*.rom
  only:
    - tags

publish_rom:
  stage: publish_rom
  tags:
    - docker
  script:
    - ls -al ${RELEASE_DIR}
    - curl -u ${UPLOADER_USERNAME}:${UPLOADER_PASSWORD} -X MKCOL ${UPLOADER_URL}/releases/
    - curl -u ${UPLOADER_USERNAME}:${UPLOADER_PASSWORD} -X MKCOL "${UPLOADER_URL}/releases/${CI_COMMIT_REF_NAME}/"
    - curl --fail -u ${UPLOADER_USERNAME}:${UPLOADER_PASSWORD} -T ${RELEASE_DIR}/${PLATFORM}_${CI_COMMIT_REF_NAME}.rom ${UPLOADER_URL}/releases/${CI_COMMIT_REF_NAME}/
    - curl --fail -u ${UPLOADER_USERNAME}:${UPLOADER_PASSWORD} -T ${RELEASE_DIR}/${PLATFORM}_${CI_COMMIT_REF_NAME}.SHA256 ${UPLOADER_URL}/releases/${CI_COMMIT_REF_NAME}/
  only:
    - tags
