# SPDX-License-Identifier: GPL-2.0-or-later
chip soc/amd/phoenix
	device domain 0 on
		device ref gpp_bridge_a on  # Internal GPP Bridge 0 to Bus A
			device ref gfx on end # Internal GPU (GFX)
			device ref xhci_0 on # USB 3.1 (USB0)
				chip drivers/usb/acpi
					device ref xhci_0_root_hub on
						chip drivers/usb/acpi
							register "desc" = ""USB3 Type-A Port A0 (MLB)""
							register "type" = "UPC_TYPE_C_USB2_SS_SWITCH"
							register "use_custom_pld" = "true"
							register "custom_pld" = "ACPI_PLD_TYPE_C(LEFT, LEFT, ACPI_PLD_GROUP(1, 1))"
							device ref usb3_port0 on end
						end
						chip drivers/usb/acpi
							register "desc" = ""USB3 Type-A Port A1 (DB)""
							register "type" = "UPC_TYPE_C_USB2_SS_SWITCH"
							register "use_custom_pld" = "true"
							register "custom_pld" = "ACPI_PLD_TYPE_C(RIGHT, RIGHT, ACPI_PLD_GROUP(1, 2))"
							register "group" = "ACPI_PLD_GROUP(1, 2)"
							device ref usb3_port1 on end
						end
						chip drivers/usb/acpi
							register "desc" = ""USB2 Type-A Port A0 (MLB)""
							register "type" = "UPC_TYPE_C_USB2_SS_SWITCH"
							register "use_custom_pld" = "true"
							register "custom_pld" = "ACPI_PLD_TYPE_C(LEFT, LEFT, ACPI_PLD_GROUP(1, 1))"
							device ref usb2_port0 on end
						end
						chip drivers/usb/acpi
							register "desc" = ""USB2 Type-A Port A1 (DB)""
							register "type" = "UPC_TYPE_C_USB2_SS_SWITCH"
							register "use_custom_pld" = "true"
							register "custom_pld" = "ACPI_PLD_TYPE_C(RIGHT, RIGHT, ACPI_PLD_GROUP(1, 2))"
							device ref usb2_port1 on end
						end
						chip drivers/usb/acpi
							register "desc" = ""User-Facing Camera""
							register "type" = "UPC_TYPE_INTERNAL"
							device ref usb2_port2 on end
						end
						chip drivers/usb/acpi
							register "desc" = ""World-Facing Camera""
							register "type" = "UPC_TYPE_INTERNAL"
							device ref usb2_port3 on end
						end
						chip drivers/usb/acpi
							register "desc" = ""Bluetooth""
							register "type" = "UPC_TYPE_INTERNAL"
							register "has_power_resource" = "true"
							register "enable_gpio" = "ACPI_GPIO_OUTPUT_ACTIVE_LOW(GPIO_154)"
							register "enable_delay_ms" = "500"
							register "enable_off_delay_ms" = "200"
							register "use_gpio_for_status" = "true"
							device ref usb2_port4 on end
						end
					end
				end
			end
		end
		device ref gpp_bridge_c on  # Internal GPP Bridge 2 to Bus C
			device ref usb4_xhci_0 on
				chip drivers/usb/acpi
					register "type" = "UPC_TYPE_HUB"
					device ref usb4_xhci_0_root_hub on
						chip drivers/usb/acpi
							register "desc" = ""USB4 Type-C Port C0 (MLB)""
							register "type" = "UPC_TYPE_C_USB2_SS_SWITCH"
							register "use_custom_pld" = "true"
							register "custom_pld" = "ACPI_PLD_TYPE_C(RIGHT, RIGHT, ACPI_PLD_GROUP(3, 1))"
							device ref usb3_port6 on end
						end
						chip drivers/usb/acpi
							register "desc" = ""USB4 Type-C Port C0 (MLB)""
							register "type" = "UPC_TYPE_C_USB2_SS_SWITCH"
							register "use_custom_pld" = "true"
							register "custom_pld" = "ACPI_PLD_TYPE_C(RIGHT, RIGHT, ACPI_PLD_GROUP(3, 1))"
							device ref usb2_port6 on end
						end
					end
				end
			end
			device ref usb4_xhci_1 on
				chip drivers/usb/acpi
					register "type" = "UPC_TYPE_HUB"
					device ref usb4_xhci_1_root_hub on
						chip drivers/usb/acpi
							register "desc" = ""USB4 Type-C Port C1 (MLB)""
							register "type" = "UPC_TYPE_C_USB2_SS_SWITCH"
							register "use_custom_pld" = "true"
							register "custom_pld" = "ACPI_PLD_TYPE_C(RIGHT, RIGHT, ACPI_PLD_GROUP(4, 1))"
							device ref usb3_port7 on end
						end
						chip drivers/usb/acpi
							register "desc" = ""USB2 Type-C Port C1 (MLB)""
							register "type" = "UPC_TYPE_C_USB2_SS_SWITCH"
							register "use_custom_pld" = "true"
							register "custom_pld" = "ACPI_PLD_TYPE_C(RIGHT, RIGHT, ACPI_PLD_GROUP(4, 1))"
							device ref usb2_port7 on end
						end
					end
				end
			end
		end
		device ref iommu on end
		device ref lpc_bridge on
			chip ec/google/chromeec
				device pnp 0c09.0 alias chrome_ec on end
			end
		end
	end # domain
	device ref uart_0 on end # UART0
end	# chip soc/amd/phoenix
